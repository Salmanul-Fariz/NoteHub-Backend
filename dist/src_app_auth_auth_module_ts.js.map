{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.ts","./src/app/auth/signin/signin.component.ts","./src/app/auth/signin/signin.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/verify-email/verify-email.component.ts","./src/app/auth/verify-email/verify-email.component.html","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js","./node_modules/@abacritt/angularx-social-login/fesm2020/abacritt-angularx-social-login.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../shared.module';\nimport { AuthRouting } from './auth.routing';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\n\nimport {\n  SocialAuthServiceConfig,\n  SocialLoginModule,\n} from '@abacritt/angularx-social-login';\nimport { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [SharedModule, AuthRouting, SocialLoginModule],\n  declarations: [SignupComponent, SigninComponent, VerifyEmailComponent],\n  providers: [\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '806091553721-2f7tgpbm558v0968l1p5csr0065o9s9b.apps.googleusercontent.com'\n            ),\n          },\n        ],\n        onError: (err) => {\n          console.error(err);\n        },\n      } as SocialAuthServiceConfig,\n    },\n  ],\n  exports: [RouterModule],\n})\nexport default class AuthModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthenticationGuard } from '../guards/authentication.guard';\nimport { VerifyEmailGuard } from '../guards/verifyEmail.guard';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\n\nconst routes: Routes = [\n  {\n    path: 'signup',\n    component: SignupComponent,\n    canActivate: [AuthenticationGuard],\n  },\n  {\n    path: 'signin',\n    component: SigninComponent,\n    canActivate: [AuthenticationGuard],\n  },\n  {\n    path: 'verify',\n    component: VerifyEmailComponent,\n    canActivate: [VerifyEmailGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRouting {}\n","import {\n  GoogleLoginProvider,\n  SocialAuthService,\n  SocialUser,\n} from '@abacritt/angularx-social-login';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../../service/authentication.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  hide = true;\n  isLoading = false;\n  passwordErr = false;\n  userOrMailErr = false;\n  googleServise = false;\n  googleEmailExist = false;\n  signinForm: FormGroup;\n  googleSubscription: Subscription;\n\n  constructor(\n    private socialService: SocialAuthService,\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    // Form Setup\n    this.signinForm = new FormGroup({\n      usernameOrEmail: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(4)],\n      }),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(6),\n        this.authService.validatePassword,\n      ]),\n    });\n\n    // Sigin With google responce\n    this.googleSubscription = this.socialService.authState.subscribe(\n      (user: SocialUser) => {\n        if (this.googleServise) {\n          this.isLoading = true;\n          this.authService.signinWithGoogle(user).subscribe({\n            next: (response) => {\n              if (response.status === 'Email-Error') {\n                this.googleEmailExist = true;\n                // Remove the Validation Message From template\n                setTimeout(() => {\n                  this.googleEmailExist = false;\n                }, 1500);\n              } else {\n                this.isLoading = false;\n                // Register Success\n                localStorage.setItem('jwt', response.data.token);\n\n                this.router.navigate(['/']);\n              }\n              this.isLoading = false;\n            },\n          });\n        }\n      }\n    );\n\n    this.googleServise = true;\n  }\n\n  // Sigin With google\n  signIn() {\n    this.socialService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  // Submit Form\n  submit(formData: any) {\n    this.isLoading = true;\n\n    this.authService.signin(formData).subscribe({\n      next: (response) => {\n        if (response.status === 'Password-Error') {\n          this.passwordErr = true;\n        } else if (response.status === 'Username-Or-Email') {\n          this.userOrMailErr = true;\n        } else {\n          this.isLoading = false;\n\n          // Signin Success\n          localStorage.setItem('jwt', response.data.token);\n          this.router.navigate(['/']);\n        }\n\n        // Remove the Validation Message From template\n        setTimeout(() => {\n          this.passwordErr = false;\n          this.userOrMailErr = false;\n        }, 1500);\n      },\n    });\n  }\n}\n","<section class=\" bg-blue flex justify-center content-center items-center\">\n  <div class=\"signBar  py-8 px-3 sm:px-9  w-10/12 md:w-7/12 lg:w-5/12\">\n    <div class=\"flex justify-center w-full\">\n      <h2 class=\"text-center\">Sign In</h2>\n    </div>\n\n    <form class=\"mt-6\" [formGroup]=\"signinForm\" (ngSubmit)=\"submit(signinForm.value)\">\n\n      <div class=\"block mt-4\">\n        <label for=\"userName\">Username or Email</label>\n        <input type=\"text\" formControlName=\"usernameOrEmail\" placeholder=\"Enter your username or email\"\n          class=\"w-full mt-2 h-10 md:h-11 authInput\">\n        <small class=\"block text-sm pt-2\"\n          *ngIf=\"!signinForm.get('usernameOrEmail')!.valid && signinForm.get('usernameOrEmail')!.touched \">\n          <span *ngIf=\"signinForm.get('usernameOrEmail').errors['required']\">Field is required !</span>\n          <span *ngIf=\"signinForm.get('usernameOrEmail').errors['minlength']\">Must contain 4 letters !</span>\n        </small>\n        <small *ngIf=\"signinForm.get('usernameOrEmail')!.valid && userOrMailErr\" class=\"block text-sm pt-2\">\n          <span>Incorrect email or username !</span>\n        </small>\n      </div>\n      <div class=\"block mt-4\">\n        <label for=\"userName\">Password</label>\n        <div class=\"relative\">\n          <input [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" placeholder=\"●●●●● \"\n            class=\"w-full mt-2 h-10 md:h-11 authInput\">\n          <span class=\"hideButton\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </span>\n        </div>\n        <small class=\"block text-sm pt-2\"\n          *ngIf=\"!signinForm.get('password')!.valid && signinForm.get('password')!.touched \">\n          <span *ngIf=\"signinForm.get('password').errors['required']\">Field is required !</span>\n          <span *ngIf=\"signinForm.get('password').errors['minlength']\">Enter Strong Password ! ,</span>\n          <span *ngIf=\"signinForm.get('password').errors['upperCase']\">Must Contain atleast 1 uppercase !</span>\n          <span *ngIf=\"signinForm.get('password').errors['lowerCase']\">Must Contain atleast 1 lowerCase !</span>\n          <span *ngIf=\"signinForm.get('password').errors['number']\">Must Contain atleast 1 number !</span>\n          <span *ngIf=\"signinForm.get('password').errors['special']\">Must Contain special character !@#%& !</span>\n        </small>\n        <small *ngIf=\"signinForm.get('usernameOrEmail')!.valid && passwordErr\" class=\"block text-sm pt-2\">\n          <span>Incorrect Password !</span>\n        </small>\n      </div>\n\n\n      <div class=\"orLine\">\n        <p>OR</p>\n      </div>\n\n      <!-- <div class=\" flex justify-center w-full\">\n        <asl-google-signin-button type='standard' shape=\"rectangle\" logo_alignment=\"center\" text=\"continue_with\"\n          size='large' theme=\"filled_blue\"></asl-google-signin-button>\n      </div> -->\n      <small *ngIf=\"googleEmailExist\" class=\"text-sm mt-3 flex justify-center\">\n        <span>Email already used for another account !</span>\n      </small>\n\n      <button [disabled]=\"!signinForm.valid\" class=\"w-full flex justify-center bg-blue py-4 mt-7\">\n        <p *ngIf=\"!isLoading\">Sign In</p>\n        <p *ngIf=\"isLoading\">Progressing</p>\n        <mat-spinner *ngIf=\"isLoading\" [diameter]=\"30\"></mat-spinner>\n      </button>\n\n    </form>\n\n    <div class=\"mt-5\">\n      <p>Not a Member ? <a [routerLink]=\"['/auth/signup']\"><u> Sign Up now </u></a></p>\n    </div>\n  </div>\n</section>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SocialAuthService, SocialUser } from '@abacritt/angularx-social-login';\nimport { GoogleLoginProvider } from '@abacritt/angularx-social-login';\n\nimport { AuthenticationService } from '../../service/authentication.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  hide = true;\n  authEmailFail = false;\n  authEmailExist = false;\n  isLoading = false;\n  isUserLoading = false;\n  isUsernameExist = false;\n  googleEmailExist = false;\n  googleServise = false;\n  googleSubscription: Subscription;\n  signupForm: FormGroup;\n\n  constructor(\n    private socialService: SocialAuthService,\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // Form Setup\n    this.signupForm = new FormGroup({\n      userName: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        this.authService.userNameValidator,\n      ]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(6),\n        this.authService.validatePassword,\n      ]),\n    });\n\n    // Sigin With google responce\n    this.googleSubscription = this.socialService.authState.subscribe(\n      (user: SocialUser) => {\n        if (this.googleServise) {\n          this.isLoading = true;\n          this.authService.signinWithGoogle(user).subscribe({\n            next: (response) => {\n              if (response.status === 'Email-Error') {\n                this.googleEmailExist = true;\n\n                // Remove the Validation Message From template\n                setTimeout(() => {\n                  this.googleEmailExist = false;\n                }, 1500);\n              } else {\n                // Register Success\n                localStorage.setItem('jwt', response.data.token);\n\n                this.router.navigate(['/']);\n              }\n              this.isLoading = false;\n            },\n          });\n        }\n      }\n    );\n\n    this.googleServise = true;\n  }\n\n  // Sigin With google\n  signIn() {\n    this.socialService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  // Check user name exist\n  checkUserExit(event: any) {\n    const value = (<HTMLInputElement>event.target).value;\n    if (value.length >= 4) {\n      this.isUserLoading = true;\n\n      this.authService.checkUsernameExist(value).subscribe({\n        next: (responce) => {\n          if (responce.status === 'Fail') {\n            setTimeout(() => {\n              this.isUserLoading = false;\n              this.isUsernameExist = true;\n            }, 500);\n          } else {\n            setTimeout(() => {\n              this.isUserLoading = false;\n              this.isUsernameExist = false;\n            }, 500);\n          }\n          this.isLoading = false;\n        },\n      });\n    }\n  }\n\n  // Form Submittion\n  submit(formData: any) {\n    this.isLoading = true;\n\n    this.authService.signup(formData).subscribe({\n      next: (response) => {\n        if (response.status === 'Email-Error') {\n          this.authEmailFail = true;\n        } else if (response.status === 'Email-exist-Error') {\n          this.authEmailExist = true;\n        } else {\n          this.isLoading = false;\n          // Register Success\n          localStorage.setItem('jwt', response.data.token);\n\n          this.router.navigate(['/']);\n        }\n\n        // Remove the Validation Message From template\n        setTimeout(() => {\n          this.authEmailFail = false;\n          this.authEmailExist = false;\n        }, 1500);\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.googleSubscription.unsubscribe();\n  }\n}\n","<section class=\" bg-blue flex justify-center content-center items-center\">\n  <div class=\"signBar py-8 px-3 sm:px-9 w-10/12 md:w-7/12 lg:w-5/12\">\n    <div class=\"flex justify-center w-full\">\n      <h2 class=\"text-center\">Sign Up</h2>\n    </div>\n\n    <form class=\"mt-6\" [formGroup]=\"signupForm\" (ngSubmit)=\"submit(signupForm.value)\">\n      <div class=\"block mt-4\">\n        <label for=\"userName\">Username</label>\n        <input type=\"text\" formControlName=\"userName\" placeholder=\"Enter your username\"\n          class=\"w-full mt-2 h-10 md:h-11 authInput\" (input)=\"checkUserExit($event)\">\n        <div class=\"w-full relative\">\n          <mat-spinner *ngIf=\"isUserLoading\" class=\"userSpinner\" [diameter]=\"30\"></mat-spinner>\n          <i *ngIf=\"!isUsernameExist && !isUserLoading && signupForm.get('userName')!.valid \"\n            class=\"userSpinnerTick text-success fa-solid fa-check\"></i>\n        </div>\n        <small class=\"block text-sm pt-2\"\n          *ngIf=\"!signupForm.get('userName')!.valid && signupForm.get('userName')!.touched \">\n          <span *ngIf=\"signupForm.get('userName').errors['required']\">Field is required !</span>\n          <span *ngIf=\"signupForm.get('userName').errors['minlength']\">Must contain 4 letters !</span>\n          <span *ngIf=\"signupForm.get('userName').errors['usernameStructure']\">Must contain lowercase or numbers\n            !</span>\n        </small>\n        <small *ngIf=\"signupForm.get('userName')!.valid  &&isUsernameExist\" class=\"block text-sm pt-2\">\n          <span>Username already exist !</span>\n        </small>\n      </div>\n      <div class=\"block mt-4\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" formControlName=\"email\" placeholder=\"Enter your email\"\n          class=\"w-full mt-2 h-10 md:h-11 authInput\">\n        <small class=\"block text-sm pt-2\" *ngIf=\"!signupForm.get('email')!.valid && signupForm.get('email')!.touched \">\n          <span *ngIf=\"signupForm.get('email').errors['required']\">Field is required !</span>\n          <span spanName *ngIf=\"signupForm.get('email').errors['email']\">Enter Valid email !</span>\n        </small>\n        <small *ngIf=\"authEmailFail && signupForm.valid\">Enter Valid email !</small>\n        <small *ngIf=\"authEmailExist && signupForm.valid\">Email already Exist !</small>\n      </div>\n      <div class=\"block mt-4\">\n        <label for=\"userName\">Password</label>\n        <div class=\"relative\">\n          <input [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" placeholder=\"●●●●● \"\n            class=\"w-full mt-2 h-10 md:h-11 authInput\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\">\n          <span class=\"hideButton\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </span>\n        </div>\n        <small class=\"block text-sm pt-2\"\n          *ngIf=\"!signupForm.get('password')!.valid && signupForm.get('password')!.touched \">\n          <span *ngIf=\"signupForm.get('password').errors['required']\">Field is required ! </span>\n          <span *ngIf=\"signupForm.get('password').errors['minlength']\">Enter Strong Password ! ,</span>\n          <span *ngIf=\"signupForm.get('password').errors['upperCase']\">Must Contain atleast 1 uppercase !</span>\n          <span *ngIf=\"signupForm.get('password').errors['lowerCase']\">Must Contain atleast 1 lowerCase !</span>\n          <span *ngIf=\"signupForm.get('password').errors['number']\">Must Contain atleast 1 number !</span>\n          <span *ngIf=\"signupForm.get('password').errors['special']\">Must Contain special character !@#%& !</span>\n        </small>\n      </div>\n\n      <div class=\"orLine\">\n        <p>OR</p>\n      </div>\n      <!-- <div class=\" flex justify-center w-full\">\n        <asl-google-signin-button type='standard' shape=\"rectangle\" logo_alignment=\"center\" text=\"continue_with\"\n          size='large' theme=\"filled_blue\"></asl-google-signin-button>\n      </div> -->\n      <small *ngIf=\"googleEmailExist\" class=\"text-sm mt-3 flex justify-center\">\n        <span>Email already used for another account !</span>\n      </small>\n      <button [disabled]=\"!signupForm.valid\" class=\"w-full flex justify-center bg-blue py-4 mt-10\">\n        <p *ngIf=\"!isLoading\">Sign Up</p>\n        <p *ngIf=\"isLoading\">Progressing</p>\n        <mat-spinner *ngIf=\"isLoading\" [diameter]=\"30\"></mat-spinner>\n      </button>\n    </form>\n\n    <div class=\"mt-5\">\n      <p>Have an account ? <a [routerLink]=\"['/auth/signin']\"><u> Sign In now </u></a></p>\n    </div>\n  </div>\n</section>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../../service/authentication.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css'],\n})\nexport class VerifyEmailComponent implements OnInit, OnDestroy {\n  sendIntervalRequest: Subscription;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // Auto Checking\n    const sendIntervalRequest = new Observable((observer) => {\n      const intervel = setInterval(() => {\n        this.authService\n          .verifyEmailVerification(localStorage.getItem('jwt'))\n          .subscribe({\n            next: (response) => {\n              if (response.data === 'Verify') {\n                localStorage.removeItem('verify');\n                this.router.navigate(['/']);\n                stopIntervel();\n              }\n              if (response.data === 'Delete') {\n                localStorage.clear();\n                this.router.navigate(['/auth/signup']);\n                stopIntervel();\n              }\n              if (response.data === 'token-expired') {\n                localStorage.clear();\n                this.router.navigate(['/auth/signup']);\n                stopIntervel();\n              }\n            },\n          });\n      }, 4000);\n      function stopIntervel() {\n        clearInterval(intervel);\n      }\n    });\n\n    this.sendIntervalRequest = sendIntervalRequest.subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.sendIntervalRequest.unsubscribe();\n  }\n}\n","<section class=\" bg-blue py-52 md:py-60 flex justify-center align-center content-center h-auto\">\n  <div class=\"w-10/12 py-20 px-20 sm:w-6/12 md:w-5/12\">\n    <h3 class=\"text-center text-2xl\">Verify Your Email address</h3>\n    <h5 class=\"mt-2 text-center text-md\">Check your mail</h5>\n  </div>\n</section>","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Inject, Directive, Input, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject, skip, filter, take, ReplaySubject, AsyncSubject, isObservable } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\nclass BaseLoginProvider {\r\n    constructor() { }\r\n    loadScript(id, src, onload, parentElement = null) {\r\n        // get document if platform is only browser\r\n        if (typeof document !== 'undefined' && !document.getElementById(id)) {\r\n            let signInJS = document.createElement('script');\r\n            signInJS.async = true;\r\n            signInJS.src = src;\r\n            signInJS.onload = onload;\r\n            if (!parentElement) {\r\n                parentElement = document.head;\r\n            }\r\n            parentElement.appendChild(signInJS);\r\n        }\r\n    }\r\n}\n\nclass SocialUser {\r\n}\n\nconst defaultInitOptions = {\r\n    oneTapEnabled: true,\r\n};\r\nclass GoogleLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n        this.changeUser = new EventEmitter();\r\n        this._socialUser = new BehaviorSubject(null);\r\n        this._accessToken = new BehaviorSubject(null);\r\n        this._receivedAccessToken = new EventEmitter();\r\n        this.initOptions = { ...defaultInitOptions, ...this.initOptions };\r\n        // emit changeUser events but skip initial value from behaviorSubject\r\n        this._socialUser.pipe(skip(1)).subscribe(this.changeUser);\r\n        // emit receivedAccessToken but skip initial value from behaviorSubject\r\n        this._accessToken.pipe(skip(1)).subscribe(this._receivedAccessToken);\r\n    }\r\n    initialize(autoLogin) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(GoogleLoginProvider.PROVIDER_ID, 'https://accounts.google.com/gsi/client', () => {\r\n                    google.accounts.id.initialize({\r\n                        client_id: this.clientId,\r\n                        auto_select: autoLogin,\r\n                        callback: ({ credential }) => {\r\n                            const socialUser = this.createSocialUser(credential);\r\n                            this._socialUser.next(socialUser);\r\n                        },\r\n                        prompt_parent_id: this.initOptions?.prompt_parent_id,\r\n                        itp_support: this.initOptions.oneTapEnabled\r\n                    });\r\n                    if (this.initOptions.oneTapEnabled) {\r\n                        this._socialUser\r\n                            .pipe(filter((user) => user === null))\r\n                            .subscribe(() => google.accounts.id.prompt(console.debug));\r\n                    }\r\n                    if (this.initOptions.scopes) {\r\n                        const scope = this.initOptions.scopes instanceof Array\r\n                            ? this.initOptions.scopes.filter((s) => s).join(' ')\r\n                            : this.initOptions.scopes;\r\n                        this._tokenClient = google.accounts.oauth2.initTokenClient({\r\n                            client_id: this.clientId,\r\n                            scope,\r\n                            prompt: this.initOptions.prompt,\r\n                            callback: (tokenResponse) => {\r\n                                if (tokenResponse.error) {\r\n                                    this._accessToken.error({\r\n                                        code: tokenResponse.error,\r\n                                        description: tokenResponse.error_description,\r\n                                        uri: tokenResponse.error_uri,\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this._accessToken.next(tokenResponse.access_token);\r\n                                }\r\n                            },\r\n                        });\r\n                    }\r\n                    resolve();\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this._socialUser.value) {\r\n                resolve(this._socialUser.value);\r\n            }\r\n            else {\r\n                reject(`No user is currently logged in with ${GoogleLoginProvider.PROVIDER_ID}`);\r\n            }\r\n        });\r\n    }\r\n    refreshToken() {\r\n        return new Promise((resolve, reject) => {\r\n            google.accounts.id.revoke(this._socialUser.value.id, (response) => {\r\n                if (response.error)\r\n                    reject(response.error);\r\n                else\r\n                    resolve(this._socialUser.value);\r\n            });\r\n        });\r\n    }\r\n    getAccessToken() {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this._tokenClient) {\r\n                if (this._socialUser.value) {\r\n                    reject('No token client was instantiated, you should specify some scopes.');\r\n                }\r\n                else {\r\n                    reject('You should be logged-in first.');\r\n                }\r\n            }\r\n            else {\r\n                this._tokenClient.requestAccessToken({\r\n                    hint: this._socialUser.value?.email,\r\n                });\r\n                this._receivedAccessToken.pipe(take(1)).subscribe(resolve);\r\n            }\r\n        });\r\n    }\r\n    revokeAccessToken() {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this._tokenClient) {\r\n                reject('No token client was instantiated, you should specify some scopes.');\r\n            }\r\n            else if (!this._accessToken.value) {\r\n                reject('No access token to revoke');\r\n            }\r\n            else {\r\n                google.accounts.oauth2.revoke(this._accessToken.value, () => {\r\n                    this._accessToken.next(null);\r\n                    resolve();\r\n                });\r\n            }\r\n        });\r\n    }\r\n    signIn() {\r\n        return Promise.reject('You should not call this method directly for Google, use \"<asl-google-signin-button>\" wrapper ' +\r\n            'or generate the button yourself with \"google.accounts.id.renderButton()\" ' +\r\n            '(https://developers.google.com/identity/gsi/web/guides/display-button#javascript)');\r\n    }\r\n    async signOut() {\r\n        google.accounts.id.disableAutoSelect();\r\n        this._socialUser.next(null);\r\n    }\r\n    createSocialUser(idToken) {\r\n        const user = new SocialUser();\r\n        user.idToken = idToken;\r\n        const payload = this.decodeJwt(idToken);\r\n        user.id = payload.sub;\r\n        user.name = payload.name;\r\n        user.email = payload.email;\r\n        user.photoUrl = payload.picture;\r\n        user.firstName = payload['given_name'];\r\n        user.lastName = payload['family_name'];\r\n        return user;\r\n    }\r\n    decodeJwt(idToken) {\r\n        const base64Url = idToken.split(\".\")[1];\r\n        const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        const jsonPayload = decodeURIComponent(window.atob(base64)\r\n            .split(\"\")\r\n            .map(function (c) {\r\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n        })\r\n            .join(\"\"));\r\n        return JSON.parse(jsonPayload);\r\n    }\r\n}\r\nGoogleLoginProvider.PROVIDER_ID = 'GOOGLE';\n\n/**\r\n * The service encapsulating the social login functionality. Exposes methods like\r\n * `signIn`, `signOut`. Also, exposes an `authState` `Observable` that one can\r\n * subscribe to get the current logged in user information.\r\n *\r\n * @dynamic\r\n */\r\nclass SocialAuthService {\r\n    /**\r\n     * @param config A `SocialAuthServiceConfig` object or a `Promise` that resolves to a `SocialAuthServiceConfig` object\r\n     */\r\n    constructor(config, _ngZone, _injector) {\r\n        this._ngZone = _ngZone;\r\n        this._injector = _injector;\r\n        this.providers = new Map();\r\n        this.autoLogin = false;\r\n        this._user = null;\r\n        this._authState = new ReplaySubject(1);\r\n        /* Consider making this an enum comprising LOADING, LOADED, FAILED etc. */\r\n        this.initialized = false;\r\n        this._initState = new AsyncSubject();\r\n        if (config instanceof Promise) {\r\n            config.then((config) => {\r\n                this.initialize(config);\r\n            });\r\n        }\r\n        else {\r\n            this.initialize(config);\r\n        }\r\n    }\r\n    /** An `Observable` that one can subscribe to get the current logged in user information */\r\n    get authState() {\r\n        return this._authState.asObservable();\r\n    }\r\n    /** An `Observable` to communicate the readiness of the service and associated login providers */\r\n    get initState() {\r\n        return this._initState.asObservable();\r\n    }\r\n    initialize(config) {\r\n        this.autoLogin = config.autoLogin !== undefined ? config.autoLogin : false;\r\n        const { onError = console.error } = config;\r\n        config.providers.forEach((item) => {\r\n            this.providers.set(item.id, 'prototype' in item.provider\r\n                ? this._injector.get(item.provider)\r\n                : item.provider);\r\n        });\r\n        Promise.all(Array.from(this.providers.values()).map((provider) => provider.initialize(this.autoLogin)))\r\n            .then(() => {\r\n            if (this.autoLogin) {\r\n                const loginStatusPromises = [];\r\n                let loggedIn = false;\r\n                this.providers.forEach((provider, key) => {\r\n                    const promise = provider.getLoginStatus();\r\n                    loginStatusPromises.push(promise);\r\n                    promise\r\n                        .then((user) => {\r\n                        this.setUser(user, key);\r\n                        loggedIn = true;\r\n                    })\r\n                        .catch(console.debug);\r\n                });\r\n                Promise.all(loginStatusPromises).catch(() => {\r\n                    if (!loggedIn) {\r\n                        this._user = null;\r\n                        this._authState.next(null);\r\n                    }\r\n                });\r\n            }\r\n            this.providers.forEach((provider, key) => {\r\n                if (isObservable(provider.changeUser)) {\r\n                    provider.changeUser.subscribe((user) => {\r\n                        this._ngZone.run(() => {\r\n                            this.setUser(user, key);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        })\r\n            .catch((error) => {\r\n            onError(error);\r\n        })\r\n            .finally(() => {\r\n            this.initialized = true;\r\n            this._initState.next(this.initialized);\r\n            this._initState.complete();\r\n        });\r\n    }\r\n    async getAccessToken(providerId) {\r\n        const providerObject = this.providers.get(providerId);\r\n        if (!this.initialized) {\r\n            throw SocialAuthService.ERR_NOT_INITIALIZED;\r\n        }\r\n        else if (!providerObject) {\r\n            throw SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND;\r\n        }\r\n        else if (!(providerObject instanceof GoogleLoginProvider)) {\r\n            throw SocialAuthService.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN;\r\n        }\r\n        return await providerObject.getAccessToken();\r\n    }\r\n    refreshAuthToken(providerId) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else {\r\n                const providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    if (typeof providerObject.refreshToken !== 'function') {\r\n                        reject(SocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);\r\n                    }\r\n                    else {\r\n                        providerObject\r\n                            .refreshToken()\r\n                            .then((user) => {\r\n                            this.setUser(user, providerId);\r\n                            resolve();\r\n                        })\r\n                            .catch((err) => {\r\n                            reject(err);\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    refreshAccessToken(providerId) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else if (providerId !== GoogleLoginProvider.PROVIDER_ID) {\r\n                reject(SocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);\r\n            }\r\n            else {\r\n                const providerObject = this.providers.get(providerId);\r\n                if (providerObject instanceof GoogleLoginProvider) {\r\n                    providerObject.revokeAccessToken().then(resolve).catch(reject);\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * A method used to sign in a user with a specific `LoginProvider`.\r\n     *\r\n     * @param providerId Id with which the `LoginProvider` has been registered with the service\r\n     * @param signInOptions Optional `LoginProvider` specific arguments\r\n     * @returns A `Promise` that resolves to the authenticated user information\r\n     */\r\n    signIn(providerId, signInOptions) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else {\r\n                let providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .signIn(signInOptions)\r\n                        .then((user) => {\r\n                        this.setUser(user, providerId);\r\n                        resolve(user);\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * A method used to sign out the currently loggen in user.\r\n     *\r\n     * @param revoke Optional parameter to specify whether a hard sign out is to be performed\r\n     * @returns A `Promise` that resolves if the operation is successful, rejects otherwise\r\n     */\r\n    signOut(revoke = false) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else if (!this._user) {\r\n                reject(SocialAuthService.ERR_NOT_LOGGED_IN);\r\n            }\r\n            else {\r\n                let providerId = this._user.provider;\r\n                let providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .signOut(revoke)\r\n                        .then(() => {\r\n                        resolve();\r\n                        this.setUser(null);\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    setUser(user, id) {\r\n        if (user && id)\r\n            user.provider = id;\r\n        this._user = user;\r\n        this._authState.next(user);\r\n    }\r\n}\r\nSocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\r\nSocialAuthService.ERR_NOT_LOGGED_IN = 'Not logged in';\r\nSocialAuthService.ERR_NOT_INITIALIZED = 'Login providers not ready yet. Are there errors on your console?';\r\nSocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN = 'Chosen login provider is not supported for refreshing a token';\r\nSocialAuthService.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN = 'Chosen login provider is not supported for getting an access token';\r\nSocialAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: SocialAuthService, deps: [{ token: 'SocialAuthServiceConfig' }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\r\nSocialAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: SocialAuthService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: SocialAuthService, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: ['SocialAuthServiceConfig']\r\n                }] }, { type: i0.NgZone }, { type: i0.Injector }]; } });\n\nclass GoogleSigninButtonDirective {\r\n    constructor(el, socialAuthService) {\r\n        this.type = 'icon';\r\n        this.size = 'medium';\r\n        this.text = 'signin_with';\r\n        this.shape = 'rectangular';\r\n        this.theme = 'outline';\r\n        this.logo_alignment = 'left';\r\n        this.width = '';\r\n        this.locale = '';\r\n        socialAuthService.initState.pipe(take(1)).subscribe(() => {\r\n            Promise.resolve(this.width).then((value) => {\r\n                if (value > '400' || (value < '200' && value != '')) {\r\n                    Promise.reject('Please note .. max-width 400 , min-width 200 ' +\r\n                        '(https://developers.google.com/identity/gsi/web/tools/configurator)');\r\n                }\r\n                else {\r\n                    google.accounts.id.renderButton(el.nativeElement, {\r\n                        type: this.type,\r\n                        size: this.size,\r\n                        text: this.text,\r\n                        width: this.width,\r\n                        shape: this.shape,\r\n                        theme: this.theme,\r\n                        logo_alignment: this.logo_alignment,\r\n                        locale: this.locale,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nGoogleSigninButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleSigninButtonDirective, deps: [{ token: i0.ElementRef }, { token: SocialAuthService }], target: i0.ɵɵFactoryTarget.Directive });\r\nGoogleSigninButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: GoogleSigninButtonDirective, selector: \"asl-google-signin-button\", inputs: { type: \"type\", size: \"size\", text: \"text\", shape: \"shape\", theme: \"theme\", logo_alignment: \"logo_alignment\", width: \"width\", locale: \"locale\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: GoogleSigninButtonDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    // eslint-disable-next-line @angular-eslint/directive-selector\r\n                    selector: 'asl-google-signin-button',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: SocialAuthService }]; }, propDecorators: { type: [{\r\n                type: Input\r\n            }], size: [{\r\n                type: Input\r\n            }], text: [{\r\n                type: Input\r\n            }], shape: [{\r\n                type: Input\r\n            }], theme: [{\r\n                type: Input\r\n            }], logo_alignment: [{\r\n                type: Input\r\n            }], width: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * The main module of angularx-social-login library.\r\n */\r\nclass SocialLoginModule {\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('SocialLoginModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static initialize(config) {\r\n        return {\r\n            ngModule: SocialLoginModule,\r\n            providers: [\r\n                SocialAuthService,\r\n                {\r\n                    provide: 'SocialAuthServiceConfig',\r\n                    useValue: config\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\nSocialLoginModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: SocialLoginModule, deps: [{ token: SocialLoginModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nSocialLoginModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: SocialLoginModule, declarations: [GoogleSigninButtonDirective], imports: [CommonModule], exports: [GoogleSigninButtonDirective] });\r\nSocialLoginModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: SocialLoginModule, providers: [\r\n        SocialAuthService\r\n    ], imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: SocialLoginModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [GoogleSigninButtonDirective],\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    providers: [\r\n                        SocialAuthService\r\n                    ],\r\n                    exports: [GoogleSigninButtonDirective]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: SocialLoginModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\n\n// Simulates login / logout without actually requiring an Internet connection.\r\n//\r\n// Useful for certain development situations.\r\n//\r\n// For example, if you want to simulate the greatest football referee England has ever produced:\r\n//\r\n//  const dummyUser: SocialUser = {\r\n//     id: '0123456789',\r\n//     name: 'Howard Webb',\r\n//     email: 'howard@webb.com',\r\n//     firstName: 'Howard',\r\n//     lastName: 'Webb',\r\n//     authToken: 'dummyAuthToken',\r\n//     photoUrl: 'https://en.wikipedia.org/wiki/Howard_Webb#/media/File:Howard_Webb_march11.jpg',\r\n//     provider: 'DUMMY',\r\n//     idToken: 'dummyIdToken',\r\n//     authorizationCode: 'dummyAuthCode'\r\n// };\r\n//\r\n//  let config = new AuthServiceConfig([\r\n//  { ... },\r\n//  {\r\n//       id: DummyLoginProvider.PROVIDER_ID,\r\n//       provider: new DummyLoginProvider(dummyUser)  // Pass your user into the constructor\r\n//   },\r\n//  { ... }\r\n//  ]);\r\nclass DummyLoginProvider extends BaseLoginProvider {\r\n    constructor(dummy) {\r\n        super();\r\n        if (dummy) {\r\n            this.dummy = dummy;\r\n        }\r\n        else {\r\n            this.dummy = DummyLoginProvider.DEFAULT_USER;\r\n        }\r\n        // Start not logged in\r\n        this.loggedIn = false;\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.loggedIn) {\r\n                resolve(this.dummy);\r\n            }\r\n            else {\r\n                reject('No user is currently logged in.');\r\n            }\r\n        });\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n    signIn() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loggedIn = true;\r\n            resolve(this.dummy);\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            this.loggedIn = false;\r\n            resolve();\r\n        });\r\n    }\r\n}\r\nDummyLoginProvider.PROVIDER_ID = 'DUMMY';\r\nDummyLoginProvider.DEFAULT_USER = {\r\n    id: '1234567890',\r\n    name: 'Mickey Mouse',\r\n    email: 'mickey@mouse.com',\r\n    firstName: 'Mickey',\r\n    lastName: 'Mouse',\r\n    authToken: 'dummyAuthToken',\r\n    photoUrl: 'https://en.wikipedia.org/wiki/File:Mickey_Mouse.png',\r\n    provider: 'DUMMY',\r\n    idToken: 'dummyIdToken',\r\n    authorizationCode: 'dummyAuthCode',\r\n    response: {},\r\n};\n\nclass FacebookLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {}) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.requestOptions = {\r\n            scope: 'email,public_profile',\r\n            locale: 'en_US',\r\n            fields: 'name,email,picture,first_name,last_name',\r\n            version: 'v10.0',\r\n        };\r\n        this.requestOptions = {\r\n            ...this.requestOptions,\r\n            ...initOptions,\r\n        };\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(FacebookLoginProvider.PROVIDER_ID, `//connect.facebook.net/${this.requestOptions.locale}/sdk.js`, () => {\r\n                    FB.init({\r\n                        appId: this.clientId,\r\n                        autoLogAppEvents: true,\r\n                        cookie: true,\r\n                        xfbml: true,\r\n                        version: this.requestOptions.version,\r\n                    });\r\n                    resolve();\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            FB.getLoginStatus((response) => {\r\n                if (response.status === 'connected') {\r\n                    let authResponse = response.authResponse;\r\n                    FB.api(`/me?fields=${this.requestOptions.fields}`, (fbUser) => {\r\n                        let user = new SocialUser();\r\n                        user.id = fbUser.id;\r\n                        user.name = fbUser.name;\r\n                        user.email = fbUser.email;\r\n                        user.photoUrl =\r\n                            'https://graph.facebook.com/' +\r\n                                fbUser.id +\r\n                                '/picture?type=normal&access_token=' +\r\n                                authResponse.accessToken;\r\n                        user.firstName = fbUser.first_name;\r\n                        user.lastName = fbUser.last_name;\r\n                        user.authToken = authResponse.accessToken;\r\n                        user.response = fbUser;\r\n                        resolve(user);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(`No user is currently logged in with ${FacebookLoginProvider.PROVIDER_ID}`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = { ...this.requestOptions, ...signInOptions };\r\n        return new Promise((resolve, reject) => {\r\n            FB.login((response) => {\r\n                if (response.authResponse) {\r\n                    let authResponse = response.authResponse;\r\n                    FB.api(`/me?fields=${options.fields}`, (fbUser) => {\r\n                        let user = new SocialUser();\r\n                        user.id = fbUser.id;\r\n                        user.name = fbUser.name;\r\n                        user.email = fbUser.email;\r\n                        user.photoUrl =\r\n                            'https://graph.facebook.com/' +\r\n                                fbUser.id +\r\n                                '/picture?type=normal';\r\n                        user.firstName = fbUser.first_name;\r\n                        user.lastName = fbUser.last_name;\r\n                        user.authToken = authResponse.accessToken;\r\n                        user.response = fbUser;\r\n                        resolve(user);\r\n                    });\r\n                }\r\n                else {\r\n                    reject('User cancelled login or did not fully authorize.');\r\n                }\r\n            }, options);\r\n        });\r\n    }\r\n    signOut() {\r\n        return new Promise((resolve, reject) => {\r\n            FB.logout((response) => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n}\r\nFacebookLoginProvider.PROVIDER_ID = 'FACEBOOK';\n\nclass AmazonLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        scope: 'profile',\r\n        scope_data: {\r\n            profile: { essential: false },\r\n        },\r\n        redirect_uri: location.origin,\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n    }\r\n    initialize() {\r\n        let amazonRoot = null;\r\n        if (document) {\r\n            amazonRoot = document.createElement('div');\r\n            amazonRoot.id = 'amazon-root';\r\n            document.body.appendChild(amazonRoot);\r\n        }\r\n        window.onAmazonLoginReady = () => {\r\n            amazon.Login.setClientId(this.clientId);\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript('amazon-login-sdk', 'https://assets.loginwithamazon.com/sdk/na/login1.js', () => {\r\n                    resolve();\r\n                }, amazonRoot);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            let token = this.retrieveToken();\r\n            if (token) {\r\n                amazon.Login.retrieveProfile(token, (response) => {\r\n                    if (response.success) {\r\n                        let user = new SocialUser();\r\n                        user.id = response.profile.CustomerId;\r\n                        user.name = response.profile.Name;\r\n                        user.email = response.profile.PrimaryEmail;\r\n                        user.response = response.profile;\r\n                        resolve(user);\r\n                    }\r\n                    else {\r\n                        reject(response.error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                reject(`No user is currently logged in with ${AmazonLoginProvider.PROVIDER_ID}`);\r\n            }\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = { ...this.initOptions, ...signInOptions };\r\n        return new Promise((resolve, reject) => {\r\n            amazon.Login.authorize(options, (authResponse) => {\r\n                if (authResponse.error) {\r\n                    reject(authResponse.error);\r\n                }\r\n                else {\r\n                    amazon.Login.retrieveProfile(authResponse.access_token, (response) => {\r\n                        let user = new SocialUser();\r\n                        user.id = response.profile.CustomerId;\r\n                        user.name = response.profile.Name;\r\n                        user.email = response.profile.PrimaryEmail;\r\n                        user.authToken = authResponse.access_token;\r\n                        user.response = response.profile;\r\n                        this.persistToken(authResponse.access_token);\r\n                        resolve(user);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    signOut() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                amazon.Login.logout();\r\n                this.clearToken();\r\n                resolve();\r\n            }\r\n            catch (err) {\r\n                reject(err.message);\r\n            }\r\n        });\r\n    }\r\n    persistToken(token) {\r\n        localStorage.setItem(`${AmazonLoginProvider.PROVIDER_ID}_token`, token);\r\n    }\r\n    retrieveToken() {\r\n        return localStorage.getItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\r\n    }\r\n    clearToken() {\r\n        localStorage.removeItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\r\n    }\r\n}\r\nAmazonLoginProvider.PROVIDER_ID = 'AMAZON';\n\nclass VKLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        fields: 'photo_max,contacts',\r\n        version: '5.124',\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n        this.VK_API_URL = '//vk.com/js/api/openapi.js';\r\n        this.VK_API_GET_USER = 'users.get';\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(VKLoginProvider.PROVIDER_ID, this.VK_API_URL, () => {\r\n                    VK.init({\r\n                        apiId: this.clientId,\r\n                    });\r\n                    resolve();\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => this.getLoginStatusInternal(resolve, reject));\r\n    }\r\n    signIn() {\r\n        return new Promise((resolve, reject) => this.signInInternal(resolve, reject));\r\n    }\r\n    signOut() {\r\n        return new Promise((resolve, reject) => {\r\n            VK.Auth.logout((response) => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    signInInternal(resolve, reject) {\r\n        VK.Auth.login((loginResponse) => {\r\n            if (loginResponse.status === 'connected') {\r\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\r\n            }\r\n        });\r\n    }\r\n    getUser(userId, token, resolve) {\r\n        VK.Api.call(this.VK_API_GET_USER, {\r\n            user_id: userId,\r\n            fields: this.initOptions.fields,\r\n            v: this.initOptions.version,\r\n        }, (userResponse) => {\r\n            resolve(this.createUser(Object.assign({}, { token }, userResponse.response[0])));\r\n        });\r\n    }\r\n    getLoginStatusInternal(resolve, reject) {\r\n        VK.Auth.getLoginStatus((loginResponse) => {\r\n            if (loginResponse.status === 'connected') {\r\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\r\n            }\r\n        });\r\n    }\r\n    createUser(response) {\r\n        const user = new SocialUser();\r\n        user.id = response.id;\r\n        user.name = `${response.first_name} ${response.last_name}`;\r\n        user.photoUrl = response.photo_max;\r\n        user.authToken = response.token;\r\n        return user;\r\n    }\r\n}\r\nVKLoginProvider.PROVIDER_ID = 'VK';\n\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nvar ProtocolMode;\r\n(function (ProtocolMode) {\r\n    ProtocolMode[\"AAD\"] = \"AAD\";\r\n    ProtocolMode[\"OIDC\"] = \"OIDC\";\r\n})(ProtocolMode || (ProtocolMode = {}));\r\nconst COMMON_AUTHORITY = 'https://login.microsoftonline.com/common/';\r\n/**\r\n * Microsoft Authentication using MSAL v2: https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-browser\r\n */\r\nclass MicrosoftLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = {\r\n            authority: COMMON_AUTHORITY,\r\n            scopes: ['openid', 'email', 'profile', 'User.Read'],\r\n            knownAuthorities: [],\r\n            protocolMode: ProtocolMode.AAD,\r\n            clientCapabilities: [],\r\n            cacheLocation: 'sessionStorage'\r\n        };\r\n        this.initOptions = {\r\n            ...this.initOptions,\r\n            ...initOptions\r\n        };\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadScript(MicrosoftLoginProvider.PROVIDER_ID, 'https://alcdn.msauth.net/browser/2.13.1/js/msal-browser.min.js', () => {\r\n                try {\r\n                    const config = {\r\n                        auth: {\r\n                            clientId: this.clientId,\r\n                            redirectUri: this.initOptions.redirect_uri ?? location.origin,\r\n                            authority: this.initOptions.authority,\r\n                            knownAuthorities: this.initOptions.knownAuthorities,\r\n                            protocolMode: this.initOptions.protocolMode,\r\n                            clientCapabilities: this.initOptions.clientCapabilities\r\n                        },\r\n                        cache: !this.initOptions.cacheLocation ? null : {\r\n                            cacheLocation: this.initOptions.cacheLocation\r\n                        }\r\n                    };\r\n                    this._instance = new msal.PublicClientApplication(config);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    getSocialUser(loginResponse) {\r\n        return new Promise((resolve, reject) => {\r\n            //After login, use Microsoft Graph API to get user info\r\n            let meRequest = new XMLHttpRequest();\r\n            meRequest.onreadystatechange = () => {\r\n                if (meRequest.readyState == 4) {\r\n                    try {\r\n                        if (meRequest.status == 200) {\r\n                            let userInfo = JSON.parse(meRequest.responseText);\r\n                            let user = new SocialUser();\r\n                            user.provider = MicrosoftLoginProvider.PROVIDER_ID;\r\n                            user.id = loginResponse.idToken;\r\n                            user.authToken = loginResponse.accessToken;\r\n                            user.name = loginResponse.idTokenClaims.name;\r\n                            user.email = loginResponse.account.username;\r\n                            user.idToken = loginResponse.idToken;\r\n                            user.response = loginResponse;\r\n                            user.firstName = userInfo.givenName;\r\n                            user.lastName = userInfo.surname;\r\n                            resolve(user);\r\n                        }\r\n                        else {\r\n                            reject(`Error retrieving user info: ${meRequest.status}`);\r\n                        }\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                    }\r\n                }\r\n            };\r\n            //Microsoft Graph ME Endpoint: https://docs.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http\r\n            meRequest.open('GET', 'https://graph.microsoft.com/v1.0/me');\r\n            meRequest.setRequestHeader('Authorization', `Bearer ${loginResponse.accessToken}`);\r\n            try {\r\n                meRequest.send();\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    async getLoginStatus() {\r\n        const accounts = this._instance.getAllAccounts();\r\n        if (accounts?.length > 0) {\r\n            const loginResponse = await this._instance.ssoSilent({\r\n                scopes: this.initOptions.scopes,\r\n                loginHint: accounts[0].username\r\n            });\r\n            return await this.getSocialUser(loginResponse);\r\n        }\r\n        else {\r\n            throw `No user is currently logged in with ${MicrosoftLoginProvider.PROVIDER_ID}`;\r\n        }\r\n    }\r\n    async signIn() {\r\n        const loginResponse = await this._instance.loginPopup({\r\n            scopes: this.initOptions.scopes,\r\n            prompt: this.initOptions.prompt,\r\n        });\r\n        return await this.getSocialUser(loginResponse);\r\n    }\r\n    async signOut(revoke) {\r\n        const accounts = this._instance.getAllAccounts();\r\n        if (accounts?.length > 0) {\r\n            await this._instance.logoutPopup({\r\n                account: accounts[0],\r\n                postLogoutRedirectUri: this.initOptions.logout_redirect_uri ?? this.initOptions.redirect_uri ?? location.href\r\n            });\r\n        }\r\n    }\r\n}\r\nMicrosoftLoginProvider.PROVIDER_ID = 'MICROSOFT';\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AmazonLoginProvider, BaseLoginProvider, DummyLoginProvider, FacebookLoginProvider, GoogleLoginProvider, GoogleSigninButtonDirective, MicrosoftLoginProvider, SocialAuthService, SocialLoginModule, SocialUser, VKLoginProvider };\n"],"names":["RouterModule","SharedModule","AuthRouting","SigninComponent","SignupComponent","VerifyEmailComponent","SocialLoginModule","GoogleLoginProvider","AuthModule","provide","useValue","autoLogin","providers","id","PROVIDER_ID","provider","onError","err","console","error","imports","declarations","exports","AuthenticationGuard","VerifyEmailGuard","routes","path","component","canActivate","forChild","FormControl","FormGroup","Validators","i0","constructor","socialService","authService","router","ngOnInit","signinForm","usernameOrEmail","validators","required","minLength","password","validatePassword","googleSubscription","authState","subscribe","user","googleServise","isLoading","signinWithGoogle","next","response","status","googleEmailExist","setTimeout","localStorage","setItem","data","token","navigate","signIn","submit","formData","signin","passwordErr","userOrMailErr","selectors","decls","vars","consts","template","ctx","signupForm","userName","userNameValidator","email","checkUserExit","event","value","target","length","isUserLoading","checkUsernameExist","responce","isUsernameExist","signup","authEmailFail","authEmailExist","ngOnDestroy","unsubscribe","Observable","sendIntervalRequest","observer","intervel","setInterval","verifyEmailVerification","getItem","removeItem","stopIntervel","clear","clearInterval","Subject","AsyncSubject","arguments","_value","_hasValue","_isComplete","_checkFinalizedStatuses","subscriber","hasError","thrownError","isStopped","complete","EventEmitter","Injectable","Inject","Directive","Input","NgModule","Optional","SkipSelf","BehaviorSubject","skip","filter","take","ReplaySubject","isObservable","CommonModule","BaseLoginProvider","loadScript","src","onload","parentElement","document","getElementById","signInJS","createElement","async","head","appendChild","SocialUser","defaultInitOptions","oneTapEnabled","clientId","initOptions","changeUser","_socialUser","_accessToken","_receivedAccessToken","pipe","initialize","Promise","resolve","reject","google","accounts","client_id","auto_select","callback","credential","socialUser","createSocialUser","prompt_parent_id","itp_support","prompt","debug","scopes","scope","Array","s","join","_tokenClient","oauth2","initTokenClient","tokenResponse","code","description","error_description","uri","error_uri","access_token","getLoginStatus","refreshToken","revoke","getAccessToken","requestAccessToken","hint","revokeAccessToken","signOut","disableAutoSelect","idToken","payload","decodeJwt","sub","name","photoUrl","picture","firstName","lastName","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","JSON","parse","SocialAuthService","config","_ngZone","_injector","Map","_user","_authState","initialized","_initState","then","asObservable","initState","undefined","forEach","item","set","get","all","from","values","loginStatusPromises","loggedIn","key","promise","push","setUser","catch","run","finally","providerId","providerObject","ERR_NOT_INITIALIZED","ERR_LOGIN_PROVIDER_NOT_FOUND","ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN","refreshAuthToken","ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN","refreshAccessToken","signInOptions","ERR_NOT_LOGGED_IN","ɵfac","NgZone","Injector","ɵprov","type","args","providedIn","decorators","GoogleSigninButtonDirective","el","socialAuthService","size","text","shape","theme","logo_alignment","width","locale","renderButton","nativeElement","ElementRef","ɵdir","selector","parentModule","Error","ngModule","ɵmod","ɵinj","DummyLoginProvider","dummy","DEFAULT_USER","authToken","authorizationCode","FacebookLoginProvider","requestOptions","fields","version","FB","init","appId","autoLogAppEvents","cookie","xfbml","authResponse","api","fbUser","accessToken","first_name","last_name","options","login","logout","AmazonLoginProvider","scope_data","profile","essential","redirect_uri","location","origin","amazonRoot","body","onAmazonLoginReady","amazon","Login","setClientId","retrieveToken","retrieveProfile","success","CustomerId","Name","PrimaryEmail","authorize","persistToken","clearToken","message","VKLoginProvider","VK_API_URL","VK_API_GET_USER","VK","apiId","getLoginStatusInternal","signInInternal","Auth","loginResponse","getUser","session","mid","sid","userId","Api","call","user_id","v","userResponse","createUser","Object","assign","photo_max","ProtocolMode","COMMON_AUTHORITY","MicrosoftLoginProvider","authority","knownAuthorities","protocolMode","AAD","clientCapabilities","cacheLocation","auth","redirectUri","cache","_instance","msal","PublicClientApplication","e","getSocialUser","meRequest","XMLHttpRequest","onreadystatechange","readyState","userInfo","responseText","idTokenClaims","account","username","givenName","surname","open","setRequestHeader","send","getAllAccounts","ssoSilent","loginHint","loginPopup","logoutPopup","postLogoutRedirectUri","logout_redirect_uri","href"],"sourceRoot":"webpack:///","x_google_ignoreList":[8,9]}